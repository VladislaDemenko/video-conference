document.addEventListener('DOMContentLoaded', function() {
    const createRoomForm = document.getElementById('createRoomForm');
    const joinRoomForm = document.getElementById('joinRoomForm');
    const joinByCodeForm = document.getElementById('joinByCodeForm');
    const errorMessage = document.getElementById('errorMessage');

    createRoomForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const roomName = document.getElementById('roomName').value.trim();

        if (!roomName) {
            showError('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã');
            return;
        }

        try {
            const response = await fetch('/api/rooms/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ name: roomName })
            });

            const data = await response.json();

            if (response.ok) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Å—Å—ã–ª–∫–æ–π –∏ –∫–æ–¥–æ–º
                showInviteDetails(data);
            } else {
                showError(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã');
            }
        } catch (error) {
            showError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + error.message);
        }
    });

    joinRoomForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const roomId = document.getElementById('roomId').value.trim();

        if (!roomId) {
            showError('–í–≤–µ–¥–∏—Ç–µ ID –∫–æ–º–Ω–∞—Ç—ã');
            return;
        }

        try {
            const response = await fetch(`/api/rooms/${roomId}/exists`);
            const data = await response.json();

            if (data.exists) {
                window.location.href = `/room/${roomId}`;
            } else {
                showError('–ö–æ–º–Ω–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }
        } catch (error) {
            showError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + error.message);
        }
    });

    joinByCodeForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const inviteCode = document.getElementById('inviteCode').value.trim();

        if (!inviteCode || !/^\d{6}$/.test(inviteCode)) {
            showError('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥');
            return;
        }

        try {
            const response = await fetch(`/api/rooms/invite/${inviteCode}/exists`);
            const existsData = await response.json();

            if (existsData.exists) {
                // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–Ω–∞—Ç–µ –ø–æ –∫–æ–¥—É
                const roomResponse = await fetch(`/api/rooms/invite/${inviteCode}`);
                const roomData = await roomResponse.json();

                if (roomResponse.ok) {
                    window.location.href = `/room/${roomData.roomId}`;
                } else {
                    showError('–ö–æ–º–Ω–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                }
            } else {
                showError('–ö–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        } catch (error) {
            showError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + error.message);
        }
    });

    function showError(message) {
        errorMessage.textContent = message;
        errorMessage.style.display = 'block';
        setTimeout(() => {
            errorMessage.style.display = 'none';
        }, 5000);
    }

    function showInviteDetails(roomData) {
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.display = 'block';

        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <h3>üéâ –ö–æ–º–Ω–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞!</h3>
                    <span class="close">&times;</span>
                </div>
                <div class="modal-body">
                    <div class="invite-section">
                        <h4>üîó –°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:</h4>
                        <div class="invite-field">
                            <input type="text" id="inviteLink" value="${roomData.inviteLink}" readonly>
                            <button onclick="copyToClipboard('inviteLink')">üìã</button>
                        </div>
                    </div>

                    <div class="invite-section">
                        <h4>üî¢ –ö–æ–¥ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</h4>
                        <div class="code-display">
                            <span class="invite-code">${roomData.inviteCode}</span>
                            <button onclick="copyToClipboard('inviteCode')">üìã</button>
                        </div>
                        <p class="code-hint">–°–æ–æ–±—â–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</p>
                    </div>

                    <div class="action-buttons">
                        <button onclick="window.location.href='/room/${roomData.roomId}'" class="btn-primary">
                            üöÄ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É
                        </button>
                        <button onclick="closeModal()" class="btn-secondary">
                            –û—Å—Ç–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                        </button>
                    </div>
                </div>
            </div>
        `;

        document.body.appendChild(modal);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.querySelector('.close').addEventListener('click', () => {
            document.body.removeChild(modal);
        });

        window.addEventListener('click', (e) => {
            if (e.target === modal) {
                document.body.removeChild(modal);
            }
        });
    }
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
function copyToClipboard(elementId) {
    const element = document.getElementById(elementId);
    if (element) {
        const text = element.value || element.textContent;
        navigator.clipboard.writeText(text).then(() => {
            showTempMessage('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
        }).catch(err => {
            console.error('Failed to copy: ', err);
        });
    }
}

function closeModal() {
    const modal = document.querySelector('.modal');
    if (modal) {
        document.body.removeChild(modal);
    }
}

function showTempMessage(message) {
    const tempMsg = document.createElement('div');
    tempMsg.className = 'temp-message';
    tempMsg.textContent = message;
    document.body.appendChild(tempMsg);

    setTimeout(() => {
        document.body.removeChild(tempMsg);
    }, 3000);
}